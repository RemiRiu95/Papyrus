From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Indhi Rousseau <contact@thekinrar.fr>
Date: Wed, 9 Sep 2020 00:05:06 +0200
Subject: [PATCH] Implement canSeePlayerEntities API


diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 4386402e5e55438475c48b023c61bfb2dbe71a8f..e4de6d74cd457c80042a47a6bb9c34e17a863f3c 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -2382,7 +2382,7 @@ Sections go from 0..16. Now whenever a section is not empty, it can potentially
                 // CraftBukkit start - respect vanish API
                 if (this.entity instanceof ServerPlayer) {
                     Player player1 = ((ServerPlayer) this.entity).getBukkitEntity();
-                    if (!player.getBukkitEntity().canSee(player1)) {
+                    if (!player.getBukkitEntity().canSeePlayerEntity(player1)) { // Papyrus - canSeePlayerEntity
                         flag = false;
                     }
                 }
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index cebaf0fb8187335ca303621a2cb412bb22584e23..ec659ce69b4646fd2b8d9449dbde3715a3563535 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1474,7 +1474,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 double d2 = (double) pos.getZ() - entityplayer.getZ();
 
                 // CraftBukkit start
-                if (entityhuman != null && entityhuman instanceof ServerPlayer && !entityplayer.getBukkitEntity().canSee(((ServerPlayer) entityhuman).getBukkitEntity())) {
+                if (entityhuman != null && entityhuman instanceof ServerPlayer && !entityplayer.getBukkitEntity().canSeePlayerEntity(((ServerPlayer) entityhuman).getBukkitEntity())) { // Papyrus - canSeePlayerEntity
                     continue;
                 }
                 // CraftBukkit end
@@ -1681,7 +1681,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
 
         for (Player entityhuman : receivers) { // Paper - Particle API Expansion
             ServerPlayer entityplayer = (ServerPlayer) entityhuman; // Paper - Particle API Expansion
-            if (sender != null && !entityplayer.getBukkitEntity().canSee(sender.getBukkitEntity())) continue; // CraftBukkit
+            if (sender != null && !entityplayer.getBukkitEntity().canSeePlayerEntity(sender.getBukkitEntity())) continue; // CraftBukkit // Papyrus - canSeePlayerEntity
 
             if (this.sendParticles(entityplayer, force, d0, d1, d2, packetplayoutworldparticles)) { // CraftBukkit
                 ++j;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
index 37356b36f0ae12d55150f399318581fa77c30cee..3c2fdab0aa4590781b24b42d088b91e3cf7cd677 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
@@ -225,7 +225,7 @@ public abstract class Projectile extends Entity {
             if (entity1 instanceof net.minecraft.server.level.ServerPlayer && entity instanceof net.minecraft.server.level.ServerPlayer) {
                 org.bukkit.entity.Player collided = (org.bukkit.entity.Player) entity.getBukkitEntity();
                 org.bukkit.entity.Player shooter = (org.bukkit.entity.Player) entity1.getBukkitEntity();
-                if (!shooter.canSee(collided)) return false;
+                if (!shooter.canSeePlayerEntity(collided)) return false;
             }
             return entity1 == null || this.leftOwner || !entity1.isPassengerOfSameVehicle(entity);
             // Paper end
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 09fe1a5dc33565df79e2960bad442b85bb8fe4a2..406a75409ef3fbd5d8ce92b1e9d941d90ef09912 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -412,7 +412,8 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
             Entity entity = entities.get(i);
 
             if (checkCanSee && source instanceof net.minecraft.server.level.ServerPlayer && entity instanceof net.minecraft.server.level.ServerPlayer
-                && !((net.minecraft.server.level.ServerPlayer) source).getBukkitEntity().canSee(((net.minecraft.server.level.ServerPlayer) entity).getBukkitEntity())) {
+                && !((net.minecraft.server.level.ServerPlayer) source).getBukkitEntity().canSeePlayerEntity(((net.minecraft.server.level.ServerPlayer) entity).getBukkitEntity())) { // Papyrus - canSeePlayerEntity
+
                 continue;
             }
 
diff --git a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
index 60d7496966b22e0553372a93e3c0e7ed9e166cba..5f1ca2d6220ec4fd505c8cdda30656159aa1e48a 100644
--- a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -583,7 +583,7 @@ public class MapItemSavedData extends SavedData {
             MapItemSavedData.this.decorations.forEach((name, mapIcon) -> {
                 // If this cursor is for a player check visibility with vanish system
                 org.bukkit.entity.Player other = org.bukkit.Bukkit.getPlayerExact(name); // Spigot
-                if (other == null || player.canSee(other)) {
+                if (other == null || player.canSeePlayerEntity(other)) {
                     icons.add(mapIcon);
                 }
             });
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 775e23bbc29eb6b7f9a44d17249da6dc780da031..94978776bd016bf45b488c54a0c4d36c887c8eda 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -142,6 +142,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private final ConversationTracker conversationTracker = new ConversationTracker();
     private final Set<String> channels = new HashSet<String>();
     private final Map<UUID, Set<WeakReference<Plugin>>> hiddenPlayers = new HashMap<>();
+    private final Set<WeakReference<Plugin>> hideAllPlugins = new HashSet<>();
     private static final WeakHashMap<Plugin, WeakReference<Plugin>> pluginWeakReferences = new WeakHashMap<>();
     private int hash = 0;
     private double health = 20;
@@ -1514,9 +1515,11 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
 
         this.getHandle().connection.send(new ClientboundPlayerInfoPacket(ClientboundPlayerInfoPacket.Action.ADD_PLAYER, other));
 
-        ChunkMap.TrackedEntity entry = tracker.entityMap.get(other.getId());
-        if (entry != null && !entry.seenBy.contains(this.getHandle())) {
-            entry.updatePlayer(this.getHandle());
+        if(canSeePlayerEntities()) { // Papyrus
+            ChunkMap.TrackedEntity entry = tracker.entityMap.get(other.getId());
+            if(entry != null && !entry.seenBy.contains(this.getHandle())) {
+                entry.updatePlayer(this.getHandle());
+            }
         }
     }
     // Paper start
@@ -1573,6 +1576,59 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return !this.hiddenPlayers.containsKey(player.getUniqueId());
     }
 
+    @Override
+    public void hidePlayerEntities(Plugin plugin) {
+        Validate.notNull(plugin, "Plugin cannot be null");
+        Validate.isTrue(plugin.isEnabled(), "Plugin attempted to hide player entities while disabled");
+        if (getHandle().connection == null) return;
+
+        if(!hideAllPlugins.isEmpty()) {
+            // Some plugins are already hiding player entities. Just mark that this
+            // plugin wants it too and end.
+            hideAllPlugins.add(getPluginWeakReference(plugin));
+            return;
+        }
+        hideAllPlugins.add(getPluginWeakReference(plugin));
+
+        var tracker = getHandle().getLevel().getChunkSource().chunkMap;
+        for(var other : getHandle().getLevel().players()) {
+            var entry = tracker.entityMap.get(other.getId());
+            if(entry != null) {
+                entry.removePlayer(getHandle());
+            }
+        }
+    }
+
+    @Override
+    public void showPlayerEntities(Plugin plugin) {
+        Validate.notNull(plugin, "Plugin cannot be null");
+        if (getHandle().connection == null) return;
+
+        if(hideAllPlugins.isEmpty()) return; // Player entities aren't hidden
+        hideAllPlugins.remove(getPluginWeakReference(plugin));
+        if(!hideAllPlugins.isEmpty()) return; // Some other plugins still want the player entities hidden
+
+        var tracker = getHandle().getLevel().getChunkSource().chunkMap;
+        for(var other : getHandle().getLevel().players()) {
+            if(!hiddenPlayers.containsKey(other.getUUID())) { // Other might still be hidden using hidePlayer
+                var entry = tracker.entityMap.get(other.getId());
+                if (entry != null && !entry.seenBy.contains(getHandle().connection)) {
+                    entry.updatePlayer(getHandle());
+                }
+            }
+        }
+    }
+
+    @Override
+    public boolean canSeePlayerEntities() {
+        return hideAllPlugins.isEmpty();
+    }
+
+    @Override
+    public boolean canSeePlayerEntity(Player player) {
+        return canSeePlayerEntities() && canSee(player);
+    }
+
     @Override
     public Map<String, Object> serialize() {
         Map<String, Object> result = new LinkedHashMap<String, Object>();
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index 8833e4c6eca0473a9bd674e345ce84cffa8eee21..ef80fc4580c91f65d9d4ea7ad21eedf1e71528a1 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -1340,7 +1340,7 @@ public class CraftEventFactory {
         com.destroystokyo.paper.event.entity.ProjectileCollideEvent event = new com.destroystokyo.paper.event.entity.ProjectileCollideEvent(projectile, collided);
 
         if (projectile.getShooter() instanceof Player && collided instanceof Player) {
-            if (!((Player) projectile.getShooter()).canSee((Player) collided)) {
+            if (!((Player) projectile.getShooter()).canSeePlayerEntity((Player) collided)) {
                 event.setCancelled(true);
                 return event;
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java b/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
index b47f18b1e448807a17ca9f2ae9609680233da837..40a28390339d63ac683dfb9f908553146a828e78 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
@@ -37,7 +37,7 @@ public class CraftMapRenderer extends MapRenderer {
         for (String key : worldMap.decorations.keySet()) {
             // If this cursor is for a player check visibility with vanish system
             Player other = Bukkit.getPlayerExact((String) key);
-            if (other != null && !player.canSee(other)) {
+            if (other != null && !player.canSeePlayerEntity(other)) {
                 continue;
             }
 
