From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Amaury Rousseau <kinrar@kinrar.io>
Date: Sun, 19 Dec 2021 19:00:02 +0100
Subject: [PATCH] Implement canSeePlayerEntities API


diff --git a/src/main/java/net/minecraft/server/level/ChunkMap.java b/src/main/java/net/minecraft/server/level/ChunkMap.java
index 0e474819c506e6d5e1731d49610c7cf472aa49c4..d62494e97fa817c1a1586f90b171719d0a304362 100644
--- a/src/main/java/net/minecraft/server/level/ChunkMap.java
+++ b/src/main/java/net/minecraft/server/level/ChunkMap.java
@@ -2324,7 +2324,7 @@ public class ChunkMap extends ChunkStorage implements ChunkHolder.PlayerProvider
                 boolean flag = d1 <= d2 && this.entity.broadcastToPlayer(player);
 
                 // CraftBukkit start - respect vanish API
-                if (!player.getBukkitEntity().canSee(this.entity.getBukkitEntity())) {
+                if (!player.getBukkitEntity().canSeePlayerEntity((Player) this.entity.getBukkitEntity())) { // Papyrus - canSeePlayerEntity
                     flag = false;
                 }
                 // CraftBukkit end
diff --git a/src/main/java/net/minecraft/server/level/ServerLevel.java b/src/main/java/net/minecraft/server/level/ServerLevel.java
index 28f605c3daa969c1a54745e552d55ecb874120a9..50f9d646ec1aa602db925344f4a4090d180716ac 100644
--- a/src/main/java/net/minecraft/server/level/ServerLevel.java
+++ b/src/main/java/net/minecraft/server/level/ServerLevel.java
@@ -1489,7 +1489,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
                 double d2 = (double) pos.getZ() - entityplayer.getZ();
 
                 // CraftBukkit start
-                if (entityhuman != null && !entityplayer.getBukkitEntity().canSee(entityhuman.getBukkitEntity())) {
+                if (entityhuman != null && !entityplayer.getBukkitEntity().canSeePlayerEntity((org.bukkit.entity.Player) entityhuman.getBukkitEntity())) { // Papyrus - canSeePlayerEntity
                     continue;
                 }
                 // CraftBukkit end
@@ -1723,7 +1723,7 @@ public class ServerLevel extends Level implements WorldGenLevel {
 
         for (Player entityhuman : receivers) { // Paper - Particle API Expansion
             ServerPlayer entityplayer = (ServerPlayer) entityhuman; // Paper - Particle API Expansion
-            if (sender != null && !entityplayer.getBukkitEntity().canSee(sender.getBukkitEntity())) continue; // CraftBukkit
+            if (sender != null && !entityplayer.getBukkitEntity().canSeePlayerEntity(sender.getBukkitEntity())) continue; // CraftBukkit // Papyrus - canSeePlayerEntity
 
             if (this.sendParticles(entityplayer, force, d0, d1, d2, packetplayoutworldparticles)) { // CraftBukkit
                 ++j;
diff --git a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
index 15744949537430d8d8ae71ea72481126c9aff7bd..8eaa291df4dde3156e2fcea7a5eb7ae06e8335aa 100644
--- a/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
+++ b/src/main/java/net/minecraft/world/entity/projectile/Projectile.java
@@ -225,7 +225,7 @@ public abstract class Projectile extends Entity {
             if (entity1 instanceof net.minecraft.server.level.ServerPlayer && entity instanceof net.minecraft.server.level.ServerPlayer) {
                 org.bukkit.entity.Player collided = (org.bukkit.entity.Player) entity.getBukkitEntity();
                 org.bukkit.entity.Player shooter = (org.bukkit.entity.Player) entity1.getBukkitEntity();
-                if (!shooter.canSee(collided)) return false;
+                if (!shooter.canSeePlayerEntity(collided)) return false;
             }
             return entity1 == null || this.leftOwner || !entity1.isPassengerOfSameVehicle(entity);
             // Paper end
diff --git a/src/main/java/net/minecraft/world/level/Level.java b/src/main/java/net/minecraft/world/level/Level.java
index 05b4a761a55db4fc88856937361b99a83f834081..dcbdaa74441fe54e14cb88bcea9a3f96f4301ee8 100644
--- a/src/main/java/net/minecraft/world/level/Level.java
+++ b/src/main/java/net/minecraft/world/level/Level.java
@@ -411,7 +411,8 @@ public abstract class Level implements LevelAccessor, AutoCloseable {
             Entity entity = entities.get(i);
 
             if (checkCanSee && source instanceof net.minecraft.server.level.ServerPlayer && entity instanceof net.minecraft.server.level.ServerPlayer
-                && !((net.minecraft.server.level.ServerPlayer) source).getBukkitEntity().canSee(((net.minecraft.server.level.ServerPlayer) entity).getBukkitEntity())) {
+                && !((net.minecraft.server.level.ServerPlayer) source).getBukkitEntity().canSeePlayerEntity(((net.minecraft.server.level.ServerPlayer) entity).getBukkitEntity())) { // Papyrus - canSeePlayerEntity
+
                 continue;
             }
 
diff --git a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
index 77209dfe179f97a5be89bdf812622773b90e6214..c3bf9dfb6a11b817b857d37655e378a14e7f9226 100644
--- a/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
+++ b/src/main/java/net/minecraft/world/level/saveddata/maps/MapItemSavedData.java
@@ -582,7 +582,7 @@ public class MapItemSavedData extends SavedData {
             MapItemSavedData.this.decorations.forEach((name, mapIcon) -> {
                 // If this cursor is for a player check visibility with vanish system
                 org.bukkit.entity.Player other = org.bukkit.Bukkit.getPlayerExact(name); // Spigot
-                if (other == null || player.canSee(other)) {
+                if (other == null || player.canSeePlayerEntity(other)) {
                     icons.add(mapIcon);
                 }
             });
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 08b4b9346b94c70ba61597adf9fc6b30d7de24a3..b83b2d64420da08e5ac525ab6bc373c66134dd82 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -147,6 +147,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private final ConversationTracker conversationTracker = new ConversationTracker();
     private final Set<String> channels = new HashSet<String>();
     private final Map<UUID, Set<WeakReference<Plugin>>> hiddenEntities = new HashMap<>();
+    private final Set<WeakReference<Plugin>> hideAllPlugins = new HashSet<>();
     private static final WeakHashMap<Plugin, WeakReference<Plugin>> pluginWeakReferences = new WeakHashMap<>();
     private int hash = 0;
     private double health = 20;
@@ -1553,6 +1554,61 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
         return !this.hiddenEntities.containsKey(entity.getUniqueId());
     }
 
+    @Override
+    public void hidePlayerEntities(Plugin plugin) {
+        Validate.notNull(plugin, "Plugin cannot be null");
+        Validate.isTrue(plugin.isEnabled(), "Plugin attempted to hide player entities while disabled");
+        if (getHandle().connection == null) return;
+
+        if(!hideAllPlugins.isEmpty()) {
+            // Some plugins are already hiding player entities. Just mark that this
+            // plugin wants it too and end.
+            hideAllPlugins.add(getPluginWeakReference(plugin));
+            return;
+        }
+        hideAllPlugins.add(getPluginWeakReference(plugin));
+
+        var tracker = getHandle().getLevel().getChunkSource().chunkMap;
+        for(var other : getHandle().getLevel().players()) {
+            var entry = tracker.entityMap.get(other.getId());
+            if(entry != null) {
+                entry.removePlayer(getHandle());
+            }
+        }
+    }
+
+    @Override
+    public void showPlayerEntities(Plugin plugin) {
+        Validate.notNull(plugin, "Plugin cannot be null");
+        if (getHandle().connection == null) return;
+
+        if(hideAllPlugins.isEmpty()) return; // Player entities aren't hidden
+        hideAllPlugins.remove(getPluginWeakReference(plugin));
+        if(!hideAllPlugins.isEmpty()) return; // Some other plugins still want the player entities hidden
+
+        var tracker = getHandle().getLevel().getChunkSource().chunkMap;
+        for(var other : getHandle().getLevel().players()) {
+            if(!hiddenEntities.containsKey(other.getUUID())) { // Other might still be hidden using hidePlayer
+            if(canSeePlayerEntities()) { // Papyrus
+                var entry = tracker.entityMap.get(other.getId());
+                if (entry != null && !entry.seenBy.contains(getHandle().connection)) {
+                    entry.updatePlayer(getHandle());
+                }
+            }
+            }
+        }
+    }
+
+    @Override
+    public boolean canSeePlayerEntities() {
+        return hideAllPlugins.isEmpty();
+    }
+
+    @Override
+    public boolean canSeePlayerEntity(Player player) {
+        return canSeePlayerEntities() && canSee(player);
+    }
+
     @Override
     public Map<String, Object> serialize() {
         Map<String, Object> result = new LinkedHashMap<String, Object>();
diff --git a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
index adb56e8d5e853680e0cc559b66c3ff3dd92c3e56..a5bb372559778d67a7c3aef7112dbb412cdddb16 100644
--- a/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
+++ b/src/main/java/org/bukkit/craftbukkit/event/CraftEventFactory.java
@@ -1355,7 +1355,7 @@ public class CraftEventFactory {
         com.destroystokyo.paper.event.entity.ProjectileCollideEvent event = new com.destroystokyo.paper.event.entity.ProjectileCollideEvent(projectile, collided);
 
         if (projectile.getShooter() instanceof Player && collided instanceof Player) {
-            if (!((Player) projectile.getShooter()).canSee((Player) collided)) {
+            if (!((Player) projectile.getShooter()).canSeePlayerEntity((Player) collided)) {
                 event.setCancelled(true);
                 return event;
             }
diff --git a/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java b/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
index b47f18b1e448807a17ca9f2ae9609680233da837..40a28390339d63ac683dfb9f908553146a828e78 100644
--- a/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
+++ b/src/main/java/org/bukkit/craftbukkit/map/CraftMapRenderer.java
@@ -37,7 +37,7 @@ public class CraftMapRenderer extends MapRenderer {
         for (String key : worldMap.decorations.keySet()) {
             // If this cursor is for a player check visibility with vanish system
             Player other = Bukkit.getPlayerExact((String) key);
-            if (other != null && !player.canSee(other)) {
+            if (other != null && !player.canSeePlayerEntity(other)) {
                 continue;
             }
 
