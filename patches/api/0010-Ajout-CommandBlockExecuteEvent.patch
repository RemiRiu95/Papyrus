From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Remi <remi.riu95@gmail.com>
Date: Sat, 5 Nov 2022 14:41:49 +0100
Subject: [PATCH] Ajout CommandBlockExecuteEvent


diff --git a/src/main/java/org/bukkit/event/block/CommandBlockExecuteEvent.java b/src/main/java/org/bukkit/event/block/CommandBlockExecuteEvent.java
new file mode 100644
index 0000000000000000000000000000000000000000..bd317d9fb546a8cffde83d18b52b435f639a315c
--- /dev/null
+++ b/src/main/java/org/bukkit/event/block/CommandBlockExecuteEvent.java
@@ -0,0 +1,80 @@
+package org.bukkit.event.block;
+
+import org.bukkit.Location;
+import org.bukkit.block.Block;
+import org.bukkit.command.CommandSender;
+import org.bukkit.entity.Entity;
+import org.bukkit.event.Cancellable;
+import org.bukkit.event.Event;
+import org.bukkit.event.HandlerList;
+import org.jetbrains.annotations.NotNull;
+import org.jetbrains.annotations.Nullable;
+
+import java.util.Objects;
+
+public class CommandBlockExecuteEvent extends Event implements Cancellable {
+    private static final HandlerList handlers = new HandlerList();
+    private boolean cancelled;
+
+    private final CommandSender sender;
+    private final Block block;
+    private final Entity entity;
+    private String command;
+
+    public CommandBlockExecuteEvent(@NotNull CommandSender sender, @Nullable Block block, @Nullable Entity entity, @NotNull String command) {
+        this.sender = sender;
+        this.block = block;
+        this.entity = entity;
+        this.command = command;
+    }
+
+    @NotNull
+    public CommandSender getSender() {
+        return sender;
+    }
+
+    @Nullable
+    public Block getBlock() {
+        return block;
+    }
+
+    @Nullable
+    public Entity getEntity() {
+        return entity;
+    }
+
+    @NotNull
+    public Location getLocation() {
+        return block != null ? block.getLocation() : Objects.requireNonNull(entity).getLocation();
+    }
+
+    @NotNull
+    public String getCommand() {
+        return command;
+    }
+
+    public void setCommand(@NotNull String command) {
+        this.command = command;
+    }
+
+    @Override
+    public boolean isCancelled() {
+        return cancelled;
+    }
+
+    @Override
+    public void setCancelled(boolean cancel) {
+        this.cancelled = cancel;
+    }
+
+    @NotNull
+    @Override
+    public HandlerList getHandlers() {
+        return handlers;
+    }
+
+    @NotNull
+    public static HandlerList getHandlerList() {
+        return handlers;
+    }
+}
