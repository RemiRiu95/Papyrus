From a786294794af0ee6e30b0995d9ee9630d4aace7f Mon Sep 17 00:00:00 2001
From: Indhi Rousseau <contact@thekinrar.fr>
Date: Wed, 30 Oct 2019 01:32:35 +0000
Subject: [PATCH] Implement Player canAlwaysOpenCommandBlocks


diff --git a/src/main/java/net/minecraft/server/BlockCommand.java b/src/main/java/net/minecraft/server/BlockCommand.java
index 6b353a99c..0f9aeddc3 100644
--- a/src/main/java/net/minecraft/server/BlockCommand.java
+++ b/src/main/java/net/minecraft/server/BlockCommand.java
@@ -4,6 +4,7 @@ import java.util.Random;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
 
+import org.bukkit.craftbukkit.entity.CraftPlayer;
 import org.bukkit.event.block.BlockRedstoneEvent; // CraftBukkit
 
 public class BlockCommand extends BlockTileEntity {
@@ -105,7 +106,11 @@ public class BlockCommand extends BlockTileEntity {
     public EnumInteractionResult interact(IBlockData iblockdata, World world, BlockPosition blockposition, EntityHuman entityhuman, EnumHand enumhand, MovingObjectPositionBlock movingobjectpositionblock) {
         TileEntity tileentity = world.getTileEntity(blockposition);
 
-        if (tileentity instanceof TileEntityCommand && (entityhuman.isCreativeAndOp() || (entityhuman.isCreative() && entityhuman.getBukkitEntity().hasPermission("minecraft.commandblock")))) { // Paper - command block permission
+        if (tileentity instanceof TileEntityCommand && (
+                entityhuman.isCreativeAndOp()
+                || ((CraftPlayer) entityhuman.getBukkitEntity()).canAlwaysOpenCommandBlocks()
+                || (entityhuman.isCreative() && entityhuman.getBukkitEntity().hasPermission("minecraft.commandblock"))
+        )) {
             entityhuman.a((TileEntityCommand) tileentity);
             return EnumInteractionResult.a(world.isClientSide);
         } else {
diff --git a/src/main/java/net/minecraft/server/ItemRestricted.java b/src/main/java/net/minecraft/server/ItemRestricted.java
new file mode 100644
index 000000000..f5ed0c82a
--- /dev/null
+++ b/src/main/java/net/minecraft/server/ItemRestricted.java
@@ -0,0 +1,23 @@
+package net.minecraft.server;
+
+import org.bukkit.craftbukkit.entity.CraftPlayer;
+
+import javax.annotation.Nullable;
+
+public class ItemRestricted extends ItemBlock {
+
+    public ItemRestricted(Block block, Info item_info) {
+        super(block, item_info);
+    }
+
+    @Nullable
+    @Override
+    protected IBlockData c(BlockActionContext blockactioncontext) {
+        EntityHuman entityhuman = blockactioncontext.getEntity();
+
+        return entityhuman != null && !(
+                entityhuman.isCreativeAndOp() ||
+                ((CraftPlayer) entityhuman.getBukkitEntity()).canAlwaysOpenCommandBlocks()
+        ) ? null : super.c(blockactioncontext);
+    }
+}
diff --git a/src/main/java/net/minecraft/server/PlayerInteractManager.java b/src/main/java/net/minecraft/server/PlayerInteractManager.java
index 6d192b274..72b65abe0 100644
--- a/src/main/java/net/minecraft/server/PlayerInteractManager.java
+++ b/src/main/java/net/minecraft/server/PlayerInteractManager.java
@@ -353,7 +353,7 @@ public class PlayerInteractManager {
             TileEntity tileentity = this.world.getTileEntity(blockposition);
             Block block = iblockdata.getBlock();
 
-            if ((block instanceof BlockCommand || block instanceof BlockStructure || block instanceof BlockJigsaw) && !this.player.isCreativeAndOp() && !(block instanceof BlockCommand && (this.player.isCreative() && this.player.getBukkitEntity().hasPermission("minecraft.commandblock")))) { // Paper - command block permission
+            if ((block instanceof BlockCommand || block instanceof BlockStructure || block instanceof BlockJigsaw) && !this.player.isCreativeAndOp() && !(block instanceof BlockCommand && (this.player.getBukkitEntity().canAlwaysOpenCommandBlocks() || (this.player.isCreative() && this.player.getBukkitEntity().hasPermission("minecraft.commandblock"))))) { // Paper - command block permission
                 this.world.notify(blockposition, iblockdata, iblockdata, 3);
                 return false;
             } else if (this.player.a((World) this.world, blockposition, this.gamemode)) {
diff --git a/src/main/java/net/minecraft/server/PlayerList.java b/src/main/java/net/minecraft/server/PlayerList.java
index 9382e8f79..49413a6d5 100644
--- a/src/main/java/net/minecraft/server/PlayerList.java
+++ b/src/main/java/net/minecraft/server/PlayerList.java
@@ -898,6 +898,9 @@ public abstract class PlayerList {
         GameProfile gameprofile = entityplayer.getProfile();
         int i = this.server.b(gameprofile);
 
+        if(entityplayer.getBukkitEntity().canAlwaysOpenCommandBlocks() && i < 2)
+            i = 2;
+
         this.a(entityplayer, i);
     }
 
diff --git a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
index 72cd52fd7..e50976471 100644
--- a/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
+++ b/src/main/java/org/bukkit/craftbukkit/entity/CraftPlayer.java
@@ -49,6 +49,7 @@ import net.minecraft.server.IChatBaseComponent;
 import net.minecraft.server.MCUtil;
 import net.minecraft.server.MapIcon;
 import net.minecraft.server.MinecraftKey;
+import net.minecraft.server.MinecraftServer;
 import net.minecraft.server.NBTTagCompound;
 import net.minecraft.server.PacketDataSerializer;
 import net.minecraft.server.PacketPlayOutBlockChange;
@@ -69,6 +70,7 @@ import net.minecraft.server.PacketPlayOutWorldEvent;
 import net.minecraft.server.PacketPlayOutWorldParticles;
 import net.minecraft.server.PlayerChunkMap;
 import net.minecraft.server.PlayerConnection;
+import net.minecraft.server.PlayerList;
 import net.minecraft.server.SystemUtils;
 import net.minecraft.server.TileEntitySign;
 import net.minecraft.server.Vec3D;
@@ -150,6 +152,7 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     private static final boolean DISABLE_CHANNEL_LIMIT = System.getProperty("paper.disableChannelLimit") != null; // Paper - add a flag to disable the channel limit
     private long lastSaveTime;
     // Paper end
+    private boolean canAlwaysOpenCommandBlocks = false; // Papyrus
 
     public CraftPlayer(CraftServer server, EntityPlayer entity) {
         super(server, entity);
@@ -2072,6 +2075,20 @@ public class CraftPlayer extends CraftHumanEntity implements Player {
     }
     // Paper end
 
+    // Papyrus start
+    @Override
+    public boolean canAlwaysOpenCommandBlocks() {
+        return canAlwaysOpenCommandBlocks;
+    }
+
+    @Override
+    public void setCanAlwaysOpenCommandBlocks(boolean canAlwaysOpenCommandBlocks) {
+        this.canAlwaysOpenCommandBlocks = canAlwaysOpenCommandBlocks;
+
+        MinecraftServer.getServer().getPlayerList().d(getHandle());
+    }
+    // Papyrus end
+
     // Spigot start
     private final Player.Spigot spigot = new Player.Spigot()
     {
-- 
2.27.0

