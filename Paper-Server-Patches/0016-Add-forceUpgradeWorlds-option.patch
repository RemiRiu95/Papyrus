From 0000000000000000000000000000000000000000 Mon Sep 17 00:00:00 2001
From: Indhi Rousseau <contact@thekinrar.fr>
Date: Tue, 18 Aug 2020 02:32:00 +0200
Subject: [PATCH] Add forceUpgradeWorlds option


diff --git a/src/main/java/net/minecraft/server/MinecraftServer.java b/src/main/java/net/minecraft/server/MinecraftServer.java
index fdc59ae93cb18caac4f45ce8f3499417f097e08a..ea3fc395e25e7b00dea067f62519262d2cf81cc8 100644
--- a/src/main/java/net/minecraft/server/MinecraftServer.java
+++ b/src/main/java/net/minecraft/server/MinecraftServer.java
@@ -156,6 +156,7 @@ import net.minecraft.world.phys.Vec3D;
 import net.minecraft.world.scores.PersistentScoreboard;
 import net.minecraft.world.scores.Scoreboard;
 import net.minecraft.world.scores.ScoreboardTeam;
+import org.apache.commons.lang3.ArrayUtils;
 import org.apache.commons.lang3.Validate;
 import org.apache.logging.log4j.LogManager;
 import org.apache.logging.log4j.Logger;
@@ -286,6 +287,8 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
 
     public volatile Thread shutdownThread; // Paper
 
+    public String[] forceUpgradeWorlds = null; // Papyrus
+
     public static <S extends MinecraftServer> S a(Function<Thread, S> function) {
         AtomicReference<S> atomicreference = new AtomicReference();
         Thread thread = new Thread(() -> {
@@ -367,6 +370,12 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
         */
         // Paper end
         Runtime.getRuntime().addShutdownHook(new org.bukkit.craftbukkit.util.ServerShutdownThread(this));
+
+        // Papyrus start
+        if(options.has("forceUpgradeWorlds")) {
+            forceUpgradeWorlds = ((String) options.valueOf("forceUpgradeWorlds")).split(",");
+        }
+        // Papyrus end
     }
     // CraftBukkit end
 
@@ -517,11 +526,13 @@ public abstract class MinecraftServer extends IAsyncTaskHandlerReentrant<TickTas
             }
             worlddata.checkName(name); // CraftBukkit - Migration did not rewrite the level.dat; This forces 1.8 to take the last loaded world as respawn (in this case the end)
             if (options.has("forceUpgrade")) {
+                if(forceUpgradeWorlds == null || ArrayUtils.contains(this.forceUpgradeWorlds, s)) { // Papyrus
                 net.minecraft.server.Main.convertWorld(worldSession, DataConverterRegistry.a(), options.has("eraseCache"), () -> {
                     return true;
                 }, worlddata.getGeneratorSettings().d().d().stream().map((entry1) -> {
                     return ResourceKey.a(IRegistry.K, ((ResourceKey) entry1.getKey()).a());
                 }).collect(ImmutableSet.toImmutableSet()));
+                }
             }
 
             IWorldDataServer iworlddataserver = worlddata;
diff --git a/src/main/java/org/bukkit/craftbukkit/CraftServer.java b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
index 229a7389ff663de2d2f6cfe02ab36d30e3740639..65f89f747e6e206caa77c78c14086ad2e4c7ab92 100644
--- a/src/main/java/org/bukkit/craftbukkit/CraftServer.java
+++ b/src/main/java/org/bukkit/craftbukkit/CraftServer.java
@@ -109,6 +109,8 @@ import net.minecraft.world.level.storage.WorldNBTStorage;
 import net.minecraft.world.level.storage.loot.LootTableRegistry;
 import net.minecraft.world.phys.Vec3D;
 import org.apache.commons.lang.Validate;
+import org.apache.commons.lang3.ArrayUtils;
+import org.apache.commons.lang3.StringUtils;
 import org.bukkit.BanList;
 import org.bukkit.Bukkit;
 import org.bukkit.ChatColor;
@@ -1161,11 +1163,13 @@ public final class CraftServer implements Server {
         worlddata.a(console.getServerModName(), console.getModded().isPresent());
 
         if (console.options.has("forceUpgrade")) {
+            if(console.forceUpgradeWorlds == null || ArrayUtils.contains(console.forceUpgradeWorlds, name)) { // Papyrus
             net.minecraft.server.Main.convertWorld(worldSession, DataConverterRegistry.a(), console.options.has("eraseCache"), () -> {
                 return true;
             }, worlddata.getGeneratorSettings().d().d().stream().map((entry) -> {
                 return ResourceKey.a(IRegistry.K, ((ResourceKey) entry.getKey()).a());
             }).collect(ImmutableSet.toImmutableSet()));
+            }
         }
 
         long j = BiomeManager.a(creator.seed());
diff --git a/src/main/java/org/bukkit/craftbukkit/Main.java b/src/main/java/org/bukkit/craftbukkit/Main.java
index 8c28275b6497778f8578e449d545644eb7860ce7..af9a3bad3724eaafe4826c2e1d7f30113f6c2c27 100644
--- a/src/main/java/org/bukkit/craftbukkit/Main.java
+++ b/src/main/java/org/bukkit/craftbukkit/Main.java
@@ -123,6 +123,13 @@ public class Main {
                 acceptsAll(asList("eraseCache"), "Whether to force cache erase during world upgrade");
                 acceptsAll(asList("nogui"), "Disables the graphical console");
 
+                // Papyrus start
+                acceptsAll(asList("forceUpgradeWorlds"), "Worlds to force upgrade")
+                        .withOptionalArg()
+                        .ofType(String.class)
+                        .describedAs("Comma-separated list of world names");
+                // Papyrus end
+
                 acceptsAll(asList("nojline"), "Disables jline and emulates the vanilla console");
 
                 acceptsAll(asList("noconsole"), "Disables the console");
